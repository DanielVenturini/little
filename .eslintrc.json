// https://eslint.org/docs/rules/{rule_name}
{
	"env": {
		"browser": true,
		"commonjs": true,
		"es2020": true,
		"mocha": true
	},
	"extends": "eslint:recommended",
	"parserOptions": {
		"ecmaVersion": 11
	},
	"rules": {
		"space-unary-ops": ["warn", {"words": true, "nonwords": false, "overrides": {"++": true, "--": true}}],
		"space-before-blocks": ["warn", {"functions": "always", "keywords": "always", "classes": "always"}],
		"quotes": ["warn", "single", {"avoidEscape": true, "allowTemplateLiterals": true}],
		"no-extra-parens": ["warn", "all", {"nestedBinaryExpressions": false}],
		"switch-colon-spacing": ["warn", {"after": false, "before": true}],
		"arrow-spacing": ["warn", {"before": true, "after": true}],
		"nonblock-statement-body-position": ["warn", "beside"],
		"space-before-function-paren": ["warn", "always"],
		"no-multiple-empty-lines": ["warn", {"max": 1}],
		"template-curly-spacing": ["warn", "never"],
		"generator-star-spacing": ["warn", "after"],
		"no-shadow": ["warn", {"allow": ["done"]}],
		"template-tag-spacing": ["warn", "never"],
		"operator-assignment": ["warn", "always"],
		"arrow-body-style": ["warn", "as-needed"],
		"prefer-exponentiation-operator": "warn",
		"operator-linebreak": ["warn", "before"],
		"yield-star-spacing": ["warn", "after"],
		"prefer-promise-reject-errors": "warn",
		"space-in-parens": ["warn", "never"],
		"max-classes-per-file": ["warn", 1],
		"quote-props": ["warn","as-needed"],
		"grouped-accessor-pairs": "warn",
		"prefer-regex-literals": "warn",
		"no-case-declarations": "warn",
		"no-negated-condition": "warn",
		"no-duplicate-imports": "warn", // but I actually do not use ES06
		"rest-spread-spacing": "warn",
		"prefer-rest-params": "warn",
		"default-param-last": "warn",
		"no-confusing-arrow": "warn",
		"no-mixed-operators": "warn",
		"eqeqeq": ["warn", "smart"],
		"no-useless-return": "warn",
		"no-useless-concat": "warn",
		"no-empty-function": "warn",
		"no-throw-literal": "warn",
		"no-return-assign": "warn",
		"space-infix-ops": "warn",
		"no-multi-spaces": "warn",
		"prefer-template": "warn",
		"no-useless-call": "warn",
		"no-return-await": "warn",
		"no-multi-assign": "warn",
		"no-unused-vars": "warn",
		"spaced-comment": "warn",
		"no-lone-blocks": "warn",
		"no-undef-init": "warn",
		"prefer-spread": "warn",
		"sort-imports": "warn",
		"default-case": "warn",
		"no-lonely-if": "warn",
		"dot-notation": "warn",
		"no-sequences": "warn",
		"wrap-iife": "warn",
		"sort-vars": "warn",
		"radix": "warn",
		"no-unused-expressions": ["error", {"allowTernary": true, "allowShortCircuit": true}],
		"no-use-before-define": ["error", { "functions": true, "classes": true }],
		"no-trailing-spaces": ["error", {"ignoreComments": true}],
		"no-whitespace-before-property": "error",
		"prefer-named-capture-group": "error",
		"prefer-numeric-literals": "error",
		"no-useless-constructor": "error",
		"no-prototype-builtins": "error",
		"array-callback-return": "error",
		"no-restricted-globals": "error",
		"prefer-object-spread": "error",
		"no-unneeded-ternary": "error",
		"symbol-description": "error",
		"no-useless-rename": "error",
		"no-nested-ternary": "error",
		"no-extend-native": "error",
		"object-shorthand": "error",
		"no-new-wrappers": "error",
		"semi": ["error", "never"],
		"require-await": "error",
		"getter-return": "error",
		"arrow-parens": "error",
		"no-var": "error"
	}
}
// awesome rules

/*"no-restricted-properties": [1, {
	"property": "toString",
	"message": "This is so akward. Please, use `console.log` instead"
}],*/